<Page x:Class="typicalEnglish.Scripts.Views.DeckCustomizationPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:typicalEnglish"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      mc:Ignorable="d" 
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="DeckCustomizationPage" FontSize="25" FontFamily="Candara Light"
       DataContext="{x:Static local:App.DeckCustomVM}">

    <StackPanel Orientation="Horizontal" Margin="7 0">
        <!--<xctk:ColorPicker Name="ClrPcker_Background" ShowRecentColors="True"
                          ColorMode="ColorCanvas" 
                          VerticalContentAlignment="Stretch" BorderBrush="Transparent"
                          BorderThickness="0" 
                          Height="50" Width="100"></xctk:ColorPicker>-->
        <StackPanel>

            <TextBlock Text="Image" HorizontalAlignment="Center"/>
            <Image Source="{Binding Deck.ImageSource}" Height="65" Width="65"/>
            <ItemsControl ItemsSource="{Binding ImageSources}" Margin="0 5">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <!--#region Resources-->
                        <DataTemplate.Resources>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}"
                       x:Key="ImageButton">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Height" Value="60"/>
                                <Setter Property="Width" Value="60"/>
                                <Setter Property="Margin" Value="7 0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid>
                                                <Ellipse Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                         Stroke="{TemplateBinding BorderBrush}" StrokeThickness="4"/>
                                                <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="BorderBrush" Value="#01c74c"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="Image">
                                <Setter Property="Height" Value="55"/>
                                <Setter Property="Width" Value="55"/>
                            </Style>
                        </DataTemplate.Resources>
                        <!--#endregion-->
                        <Button Style="{StaticResource ImageButton}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl},
                                        Path=DataContext.SetImageCommand}" CommandParameter="{Binding Source}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Image Source="{Binding Path=Source}"/>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <!--#region ItemsPanel-->
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True">
                        </WrapPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <!--#endregion-->
            </ItemsControl>
            <Button Content="Open" Style="{StaticResource InvisButton}"
                    Background="Transparent" Margin="0 5">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction
                                            Command="{Binding OpenImageCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </StackPanel>
      
    </StackPanel>
</Page>
