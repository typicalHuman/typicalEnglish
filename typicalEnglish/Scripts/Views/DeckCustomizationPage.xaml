<Page x:Class="typicalEnglish.Scripts.Views.DeckCustomizationPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:typicalEnglish"
      xmlns:views="clr-namespace:typicalEnglish.Scripts.Views"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      mc:Ignorable="d" 
      xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="DeckCustomizationPage" FontSize="25" FontFamily="Candara Light"
       DataContext="{x:Static local:App.DeckCustomVM}">
    <ScrollViewer>
        <StackPanel  Margin="7 0">
            <StackPanel.Resources>
                <Style TargetType="xctk:ColorPicker" BasedOn="{StaticResource {x:Type xctk:ColorPicker}}">
                    <Setter Property="ColorMode" Value="ColorCanvas"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Height" Value="50"/>
                    <Setter Property="Width" Value="100"/>
                    <Setter Property="ShowRecentColors" Value="True"/>
                    <Setter Property="FontSize" Value="15"/>
                </Style>
            </StackPanel.Resources>
            <Grid>
                <!--#region Back Button-->
                <Button Background="Transparent" Style="{StaticResource InvisButton}" Height="45" Width="65" BorderBrush="Transparent"
                Content="{md:PackIcon Kind=ArrowBack,Size=30}" HorizontalAlignment="Left"
                VerticalAlignment="Top" Margin="5">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding BackCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <!--#endregion-->

                <!--#region Image Customization-->
                <StackPanel>
                    <TextBlock Text="Image" HorizontalAlignment="Center"/>
                    <Image Source="{Binding Deck.ImageSource}" Height="65" Width="65" RenderOptions.BitmapScalingMode="HighQuality"/>
                    <ItemsControl ItemsSource="{Binding ImageSources}" Margin="0 5" HorizontalAlignment="Center">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <!--#region Resources-->
                                <DataTemplate.Resources>
                                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}"
                       x:Key="ImageButton">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="Height" Value="60"/>
                                        <Setter Property="Width" Value="60"/>
                                        <Setter Property="Margin" Value="7 0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Grid>
                                                        <Ellipse Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                         Stroke="{TemplateBinding BorderBrush}" StrokeThickness="4"/>
                                                        <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <Setter Property="BorderBrush" Value="#01c74c"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Height" Value="55"/>
                                        <Setter Property="Width" Value="55"/>
                                    </Style>
                                </DataTemplate.Resources>
                                <!--#endregion-->
                                <Button Style="{StaticResource ImageButton}" HorizontalAlignment="Center">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl},
                                        Path=DataContext.SetImageCommand}" CommandParameter="{Binding Source}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Image Source="{Binding Path=Source}"/>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <!--#region ItemsPanel-->
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <views:AlignableWrapPanel IsItemsHost="True" HorizontalContentAlignment="Center">
                                </views:AlignableWrapPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="Control.HorizontalAlignment" Value="Center"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <!--#endregion-->
                    </ItemsControl>
                    <Button Content="Open" Style="{StaticResource InvisButton}"
                    Background="Transparent" Margin="0 5" Width="200">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction
                                            Command="{Binding OpenImageCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </StackPanel>
                <!--#endregion-->
            </Grid>

            <Separator/>
            <!--#region Colors-->
            <Grid  Margin="0 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!--#region Background-->
                <StackPanel Orientation="Vertical" Grid.Column="0">
                    <TextBlock Text="Background" HorizontalAlignment="Center"/>
                    <xctk:ColorPicker SelectedColor="{Binding Deck.Background, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </StackPanel>
                <!--#endregion-->
                <!--#region Foreground-->
                <StackPanel Orientation="Vertical" Grid.Column="1">
                    <TextBlock Text="Foreground" HorizontalAlignment="Center"/>
                    <xctk:ColorPicker SelectedColor="{Binding Deck.Foreground, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></xctk:ColorPicker>
                </StackPanel>
                <!--#endregion-->
                <!--#region Border Brush-->
                <StackPanel Orientation="Vertical" Grid.Column="2">
                    <TextBlock Text="Border Brush" HorizontalAlignment="Center"/>
                    <xctk:ColorPicker SelectedColor="{Binding Deck.BorderColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></xctk:ColorPicker>
                </StackPanel>
                <!--#endregion-->
                <!--#region Underline Brush-->
                <StackPanel Orientation="Vertical" Grid.Column="3" >
                    <TextBlock Text="Underline Brush" HorizontalAlignment="Center"/>
                    <xctk:ColorPicker SelectedColor="{Binding Deck.UnderlineColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></xctk:ColorPicker>
                </StackPanel>
                <!--#endregion-->

            </Grid>
            <!--#endregion-->

        </StackPanel>
    </ScrollViewer>
  
</Page>
