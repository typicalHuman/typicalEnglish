<Window x:Class="typicalEnglish.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:typicalEnglish"
        mc:Ignorable="d"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        Title="typicalEnglish" MinHeight="450" MinWidth="450"
        DataContext="{x:Static local:App.MainVM}"
        WindowState="{Binding WindowState}"
        ResizeMode="{Binding ResizeMode, UpdateSourceTrigger=PropertyChanged}" WindowStyle="None" 
        BorderBrush="#686868" BorderThickness="{Binding WindowBorderThickness, UpdateSourceTrigger=PropertyChanged}" AllowsTransparency="True"
        MouseLeftButtonDown="OnMouseLeftButtonDown" MouseLeftButtonUp="OnMouseLeftButtonUp"
        StateChanged="Window_StateChanged"
        MouseMove="OnMouseMove" FontFamily="Candara Light">
    <WindowChrome.WindowChrome>
        <WindowChrome 
        CaptionHeight="0"
        ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>
    <Grid>
        <!--#region Definitions-->
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <!--#endregion-->

        <!--#region Title-->
        <TextBlock Text="typicalEnglish" Foreground="White" Panel.ZIndex="1"
                   HorizontalAlignment="Left" VerticalAlignment="Center"
                   FontSize="20" Margin="5 0"/>
        <!--#endregion-->

        <!--#region Window Manipulation Buttons-->
        <DockPanel Grid.ColumnSpan="5" Background="#051e3e">
            <DockPanel.Resources>
                <!--Margin between buttons-->
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" >
                    <Setter Property="Margin" Value="3,0,7,0"/>
                    <Setter Property="DockPanel.Dock" Value="Right"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="Width" Value="25"/>
                </Style>
            </DockPanel.Resources>
            <!--#region Close Button-->
            <Button Background="#f35f5d" Template="{StaticResource CircularButton}"
                    BorderBrush="#ec4c45" ToolTip="Close">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding CloseCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <!--#endregion-->
            <!--#region Minimize Button-->
            <Button Background="#febf34" Template="{StaticResource CircularButton}" BorderBrush="#e8a61c"
                    ToolTip="Hide">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding MinimizeCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <!--#endregion-->
            <!--#region Maximize Button-->
            <Button Background="#01c74c" Template="{StaticResource CircularButton}" BorderBrush="#15b329" 
                    HorizontalAlignment="Right" ToolTip="Maximize">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding MaximizeCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}"
                                         Value="Normal">
                                <Setter Property="ToolTip" Value="Maximize"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}"
                                         Value="Maximized">
                                <Setter Property="ToolTip" Value="Restore Down"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <!--#endregion-->
        </DockPanel>
        <!--#endregion-->
        
        <!--#region Page Buttons-->

        <!--#region Deck Button-->
        <Button Content="Decks" FontWeight="Bold" Background="#a8e6cf" Grid.Row="1" VerticalAlignment="Top"
                 FontSize="17" HorizontalAlignment="Stretch"  Height="40" BorderBrush="Transparent" 
                BorderThickness="0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:InvokeCommandAction Command="{Binding PageNavigateCommand}"
                                                       CommandParameter="Scripts/Views/DecksPage.xaml"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <!--#endregion-->
        <!--#region Translator Button-->
        <Button  Content="Translator" FontWeight="Bold" Grid.Column="1" Background="#dcedc1" Grid.Row="1" VerticalAlignment="Top"
                 FontSize="17" HorizontalAlignment="Stretch"  Height="40" BorderBrush="Transparent" 
                BorderThickness="0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:InvokeCommandAction Command="{Binding PageNavigateCommand}"
                                                       CommandParameter="Scripts/Views/TranslatorPage.xaml"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <!--#endregion-->
        <!--#region Reverso Button-->
        <Button  Content="Reverso" FontWeight="Bold" Grid.Column="2" Background="#ffd3b6 " Grid.Row="1" VerticalAlignment="Top"
                 FontSize="17"  HorizontalAlignment="Stretch" Height="40" BorderBrush="Transparent" 
                BorderThickness="0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:InvokeCommandAction Command="{Binding PageNavigateCommand}"
                                                       CommandParameter="Scripts/Views/ReversoPage.xaml"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <!--#endregion-->

        <!--#region Options Button-->
        <Button Content="Options" FontWeight="Bold" Grid.Column="3" Background="#ffaaa5" Grid.Row="1" VerticalAlignment="Top"
                 FontSize="17" HorizontalAlignment="Stretch" Height="40" BorderBrush="Transparent" 
                BorderThickness="0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:InvokeCommandAction Command="{Binding PageNavigateCommand}"
                                                       CommandParameter="Scripts/Views/OptionsPage.xaml"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <!--#endregion-->



        <!--#endregion-->

        <!--#region NavigationControl-->
        <Frame NavigationUIVisibility="Hidden" x:Name="Frame1" 
               Source="DecksPage.xaml" 
               Grid.Row="2" Grid.ColumnSpan="4"></Frame>
        <!--#endregion-->

    </Grid>
</Window>
